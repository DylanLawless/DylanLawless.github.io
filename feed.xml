<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-05-27T19:23:55+02:00</updated><id>/feed.xml</id><entry><title type="html">Unnecessary complexity in precision medicine</title><link href="/2020/05/05/singhgupta_genes.html" rel="alternate" type="text/html" title="Unnecessary complexity in precision medicine" /><published>2020-05-05T00:00:00+02:00</published><updated>2020-05-05T00:00:00+02:00</updated><id>/2020/05/05/singhgupta_genes</id><content type="html" xml:base="/2020/05/05/singhgupta_genes.html">{{ page.title }}
================
&lt;p class=&quot;meta&quot;&gt;26 Apr 2020&lt;/p&gt;
&lt;br/&gt;
* TOC
{:toc}
&lt;br/&gt;
Singh_and_Gupta.2020.GenoMed;  
Singh, R.S., Gupta, B.P. Genes and genomes and unnecessary complexity in precision medicine. npj Genom. Med. 5, 21 (2020). https://doi.org/10.1038/s41525-020-0128-1 Open Access
[https://doi.org/10.1038/s41525-020-0128-1](https://doi.org/10.1038/s41525-020-0128-1)

# Abstract

Risk factors, gene to phenotype, are more complex that anticipated in early genomics. 
Genotype - phenotype
Molecular and evolutionary complexity.
Molecular contigency - chance driven mutation, redundancy, molectular pathway cross-over (shared phenotypes).
Necessary complexity versus unnecessary - evolutionary baggage due to molecular constraint and blind evolution. 

# Introduction

&quot;Two individuals bearing the same set of risk factors may not present (or exhibit the symptoms of) the same disease. This is the kind of problem that precision medicine is expected to overcome.&quot;
From familial studies, we often see that even clear monogenic, dominant disease does not always manifest equally among family members. &quot;The lack of genetic determinism in disease is the result of molecular contingency.&quot;

An interesting point is made that I haven&apos;t though much about; &quot;Whether evolution is deterministic, i.e., predictable and repeatable, or contingent and unpredictable is an interesting topic in evolutionary biology (ref 1) (for a recent review see ref. 2)&quot;
Although, this is just a smaller version of a question in physics that I do think about frequently: if every irreducibly small particle/force in the universe could be detected with a mapped trajectory, then we could &quot;see&quot; both forward and reverse in time; causal determinism. Since the particle physics answer will not come anytime soon, a discussion on the evolutionary version is reasonable. 

&quot;..phenotypic evolutionary ‘repeatability’ is common when the founding populations are closely related, perhaps resulting from shared genes and developmental pathways, whereas different outcomes become more likely as historical divergences increase.&quot;

I believe that in some cases we can produces actionable levels of confidence in mutation prediction to make this a worthwhile endeavour. Knowing that a mutation is likely to occur (and be evolutionarily selected against) and result in disease means that we can prepare a treatment / cure for when it does occur naturally. 
For example, each nucleotide within each individual cell will have a particular probability for the energy required to mutate. 
Many factors affect this value; nucleotide type, methylation, DNA/RNA folding, bound proteins, chemical/UV insult, etc. 
Some of these factors can be estimated based on large studies, and some may never be quantifiable in the real world.
However, we can at least quantify some values to produce mutation predictor value X and and response Y and therefore quantify estimate coefficients, and therefore predict that mutation 1 is more likely to occur than mutation 2. 

Reference is made to &quot;‘Evolution and Tinkering,’ Jacob (ref 4)&quot; who compares natural selection to a tinkerer as opposed to an engineer.
Singh and Gupta propose &quot;a theory of molecular complexity, consisting of necessary and unnecessary complexity in living systems&quot;, that &quot;exceedingly high level of unnecessary complexity&quot; is more due to blind evolution rather than randomness of mutation. 
&quot;Unecessary and unnecessary complexity is relevant to current discussions on genomics and precision medicine.&quot;
 
# Complexity in living systems
# Is complexity necessary?
# Evolution of complexity: genic, genomic, and developmental
# Unnecessary complexity in precision medicine
# Unnecessary complexity and the etiology of cancer
# Unnecessary complexity beyond precision medicine
# Conclusions</content><author><name></name></author><category term="genomics," /><category term="journal" /><category term="club" /><summary type="html">Unnecessary complexity in precision medicine 26 Apr 2020 Unnecessary complexity in precision medicine Singh_and_Gupta.2020.GenoMed; Singh, R.S., Gupta, B.P. Genes and genomes and unnecessary complexity in precision medicine. npj Genom. Med. 5, 21 (2020). https://doi.org/10.1038/s41525-020-0128-1 Open Access https://doi.org/10.1038/s41525-020-0128-1</summary></entry><entry><title type="html">Websites for basic genetic variant information</title><link href="/2020/04/27/genetic_mutation_websites.html" rel="alternate" type="text/html" title="Websites for basic genetic variant information" /><published>2020-04-27T00:00:00+02:00</published><updated>2020-04-27T00:00:00+02:00</updated><id>/2020/04/27/genetic_mutation_websites</id><content type="html" xml:base="/2020/04/27/genetic_mutation_websites.html">{{ page.title }}
================

&lt;p class=&quot;meta&quot;&gt;26 Apr 2020&lt;/p&gt;

1. [Introduction](#introduction)

# Introduction
Identifying pathogenic variants with whole genome and whole exome sequencing is not simple.
Determining the correct filtering method can take some time but it is not the most difficult task.
Validating genetic factors is generally the most time consuming part of this type of research. 
Here is a compilation of some of the websites and resources that I use constantly.
I will begin this simply as a list but continue to contribute information on how to use all of these over time.
I use most of the listed resources daily.
There are several steps in assessing if a gene variant is a good candidate to explain a clinical phenotype.
Often a clear story can be made between the genetic mutation and the resulting phenotype.
Other times (usually) a genetic finding (particularly biallelic mutations) seem to have a direct link to the clinical phenotype but it can take  weeks-months to functionally validate such a finding.
 With that in mind, it is good to have some sort of routine way to quickly assess the possible pathogenicity of a mutation by hand.
I will mostly discuss these in the context of rare mutations which are likely to be under selective pressure and occur at very low frequencies in a healthy population.
 Sites and tools for getting basic genetic information For assessing rare variants Ensembl and Exac (now gnomAD) are my bread and butter.
I haven&apos;t done it yet but I need to set up a hotkey to open a browser with both of these sites simultaneously.
To demonstrate how I like to use these we could use an example. Lets say we have NGS results for a patient with immunodeficiency with coding variants in the gene RAG2.
OK, well known gene, important for antibody production as wells as TCR and BCR development.
Looks good so far.
Let&apos;s see if the variants are common SNPs or could they be likely to cause damage if they are not reported (of course this is in your pipeline automatically but it&apos;s good practice and takes less than 60 seconds; valuable if there is a real person affected by your results).
 After a long time getting confused about transcripts and coordinates, I now know how important it is to accurately report coordinates so there is no confusion if collaborating or reporting the mutations etc. Jump over to Exac.
[Exac.org](http://exac.broadinstitute.org)
 This is in a nutshell, the exomes of ~ 60,000 individuals which can be used to view how frequently mutations occur in the general population (unfortunately it is mostly just European but there is some global representation). Exac is vital for checking coding variants.
It covers some of the intronic regions (exon intron splice sites) and some of the upstream and downstream regions.
This is typical for anyone who does whole exome sequencing.
 We mentioned confusion about transcripts and coordinates, Exac automatically loads the coverage as shown for the canonical transcript. Stick with this transcript for reporting or at least for your own notes.
When you head over to Ensembl grab the same one in the transcript table. Update! [The Genome Aggregation Database (gnomAD) is online](http://gnomad.broadinstitute.org/about). This data set is the combination of &quot;123,136 exomes and 15,496 genomes from unrelated individuals&quot; which has &quot;removed individuals known to be affected by severe pediatric disease, as well as their first-degree relatives.&quot;
This is n extremely exciting resource. If you are familiar with Exac then you will know the value of this expansion into gnomAD. [youtube.com](https://youtu.be/_uRuFZv4JaU) [Ensembl](http://www.ensembl.org/index.html) Any good pipeline will have annotation of the details for any coding variants but it can be pretty valuable to go and look at these again by hand.
It doesn&apos;t take long but can end up saving time in the long run.
If you do it often, the first check on Exac take less than 60 seconds.
The next check on Ensemble will only take 2-3 minutes.
In the quick search I plug in the gene name, luckily for my stuff the top hit is always the human gene (sorry Alpaca researchers).
When you get to the gene page first click is always &quot;Show transcript table.&quot;
If you are lucky there is only one coding transcript like for RAG2.
Most of the time there are about 6 transcripts of wildly varying lengths just to confuse matters.
Go for the transcript ID of the canonical transcript which you noted on Exac.
If you do so then life will be easier when you go to check the coordinates. 
On the left hand side in the table &quot;Transcript-based displays&quot; click &quot;cDNA&quot; shown under &quot;Sequence&quot;.
You can then search through to find the variant and amino acid to see if everything lines up.
You see the cDNA position and amino acid positions overlaid. If you were to pick a different transcript then of course the coordinates are likely to be different.
From here I usually go back to the table on the left of the screen to search Exons.
This obviously just lays out the exon sequences  in blocks along with useful information.
Only a small segment of the introns are displayed.
If you want reference sequences of multiple types just find the down load sequence button and chose FASTA and decide which type you want to display. You would likely have the information based on the annotated NGS data but you may want to look at the different transcripts and Ensembl is the best option. So far (in just a couple of minutes) you could have looked up the allele frequencies, affect of mutation on different transcripts and check that everything that should be reported from the NGS output matches up.
My next step is to check if these variants a already reported.
Everyone has their favourite method, searching PubMed etc. For my topics OMIM often produces good results and a quick search. [Online Mendelian Inheritance in Man](https://www.omim.org/)
This is a curated database and is generally very good.
Hopefully it continues to grow for a long time into the future.
Depending on how much you already know about your gene it is sometimes helpful to jump straight down to the &quot;Allelic variants&quot; section (if one is present).
You may find a few variants already reported with a similar phenotype being described as your case.
You may find the exact mutations already reported.
If this is the case then it is likely that it would have taken a few minutes longer to find the same cases on one of the other databases.
Whether you have found that there are many mutations reported similar to those that interest you or if you have found nothing reported so far, my next step is always to run through UniProt.
[UniProt](http://www.uniprot.org)
UniProt is so rich in information that there is no need to expnad on it here.
If you have never used it then just pick your favourite protein and go look it up now.
There is (usually) a combination of nearly everything you need to get a quick overview of a protein.
Gene function, functional domains, known variants, reported knockouts/mutagenesis studies, protein structures, expression, localisation, the list goes on.
Actually, as much as I love PDB, I find that using UniProt is usually quicker to check for available PDB protein structures before actually going to PDB to download from the source.
With these four websites one would likely be able to decide how confident you are about a candidate mutation/s.
At least if you are just looking coding variants.
Assessing non-coding regions is much messier business.
From here on in validation of a mutation can require a widely variable amount of functional work.
One thing is certain however, Sanger sequencing will be needed to confirm your NGS finding. [youtube.com](https://www.youtube.com/watch?v=3amsDkyiMu8) [Autoprimer3](https://github.com/gantzgraf/autoprimer3/releases/tag/v3.0.2)
Autoprimer3 is an excellent application that you can use to design primers for a gene of interest.
It is super quick for producing primers to be used on genomic DNA for &quot;any UCSC genome and design PCR/sequencing primers to genes or genome coordinates&quot;.
As an example I timed myself to see how long it takes to get a primer list for all exons of the gene RAG2 and a reference sequence from default genomic coordinates on hg38 while avoiding SNPs based on dbsnp142.
It took me 46 seconds to open the application and produce a primer list and reference sequence.
Less than 1% of the time I may have to go and redesign a primer manually because of an awkward sequence or a patient&apos;s DNA may have some uncommon variant at the primer site. 
Depending on which supplier you order oligos from, Sanger sequencing to confirm a variant by found during NGS can be done within 3 days; about 90 seconds to design and order the oligos, a day or 2 until they are delivered,  and a day to PCR and sequence.
The explanation may be a bit long winded here but this app is excellent.
Just give it a try if you do any routine PCR or sequencing for coding variant.
As the name suggests, it is a simple version of Primer3 but super quick.
[Genome Analysis Toolkit: Variant Discovery in High-Throughput Sequencing Data.](https://software.broadinstitute.org/gatk/)
GATK most useful to jump straight to: [Tool Documentation Index](https://software.broadinstitute.org/gatk/documentation/tooldocs/) Genome hg38 [(TCR region as example)](http://genome.ucsc.edu/cgi-bin/das/hg38/dna?segment=chr7:142299011,142813287)
[GPGtools](https://gpgtools.org)
for sending sensitive patient info.
[GnuPG](https://www.gnupg.org) is GPL licensed alternative to the PGP suite for sending sensitive patient info.
See also Pretty good privacy for academic data. [Human splice finder](http://www.umd.be/HSF3/HSF.html) Illumina-Pipeline-V2 (&quot;Version 2 of Illumina pipeline that incorporates [CASAVA 1.8&quot;)](https://github.com/nirav99/Illumina-Pipeline-V2/blob/master/IlluminaPipelineCASAVA1_8.pdf) Sequence Manipulation Suite http://www.coccidia.icb.usp.br/sms2/index.html
Sequence Ontology http://www.sequenceontology.org
UCSC Genome Bioinformatics FAQ https://genome.ucsc.edu/FAQ/FAQformat
UCSC Table Browser https://genome.ucsc.edu/cgi-bin/hgTables
MutScan - https://github.com/OpenGene/MutScan
Detect and visualise target mutations by scanning FastQ files directly. Very useful if you are interested in some certain mutations but saves the time it would take to normally through your pipeline. 
## Communities and learning
No need to reinvent the wheel here. Stephen Turner has a better list of resources than I will produce with his post &quot;Staying Current in Bioinformatics &amp; Genomics: 2017 Edition.&quot; 
http://www.gettinggeneticsdone.com/2017/02/staying-current-in-bioinformatics-genomics-2017.html
Essentially it boils down to the journals, Twitter, some expert blogs, and several genomics communities.
The journals and other sites I like to follow are detailed here. When all directed into a single feed I think it produces an essential resource for most genetics/bioinformatics scientists.
Literature of Interest - In this post I show the use of Feedly to condense all the litereature that I follow into a single source and allow the option to view by category.

## Machine learning and cloud computing
In this post I have started to gather some of the resources I like to use and topics that I find interesting.
Some other links tagged on at the end:
BioStarts - Bioinformatics academic community https://www.biostars.org
Useful bash Bioinformatics one-liners  
https://github.com/stephenturner/oneliners  
Efficient R programming https://csgillespie.github.io/efficientR/
Cheat sheets for data.   science http://www.datasciencecentral.com/...
RStudio Cheat Sheets  
https://www.rstudio.com/resources/cheatsheets/#515</content><author><name></name></author><category term="statistics," /><category term="genomics" /><summary type="html">Websites for basic genetic variant information</summary></entry><entry><title type="html">Cryptography</title><link href="/2020/04/26/cryptography.html" rel="alternate" type="text/html" title="Cryptography" /><published>2020-04-26T00:00:00+02:00</published><updated>2020-04-26T00:00:00+02:00</updated><id>/2020/04/26/cryptography</id><content type="html" xml:base="/2020/04/26/cryptography.html">{{ page.title }}
================

&lt;p class=&quot;meta&quot;&gt;26 Apr 2020&lt;/p&gt;

1. [Introduction](#introduction)
2. [Breaking crypto](#breaking)
3. [AES is the most important current encryption method](#aes)
4. [Quantum computing](#quantum)
5. [Some thoughts](#thoughts)
6. [Reading list on more advanced topics](#reading)  

&lt;a name=&quot;introduction&quot;&gt;&lt;/a&gt;

# Introduction

Like most of the posts on this blog, this will be a work in progress. Cryptography is a topic which I stumbled upon and really enjoy.
For the reading list skip to the end of this page.
There is a long interesting history which would appeal to a casual reader.
Most people would be familiar with stories about crypto during WWII, particularly because of movies like
&lt;span style=&quot;color: #0000ff;&quot;&gt;[The Imitation Game&lt;span id=&quot;titleYear&quot;&gt;(2014).
&lt;/span&gt;](http://www.imdb.com/title/tt2084970/)&lt;/span&gt;
Cracking of Enigma falls into the espionage theme along with stories like that of books from  &lt;span class=&quot;author notFaded&quot; style=&quot;color: #0000ff;&quot;&gt;&lt;span class=&quot;a-declarative&quot;&gt;[Ben Macintyre.](https://www.amazon.co.uk/Ben-Macintyre/e/B001H6WAL8/ref=dp_byline_cont_book_1) &lt;/span&gt;&lt;/span&gt;One of my favorites is: &lt;span id=&quot;productTitle&quot; class=&quot;a-size-large&quot;&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;[Operation Mincemeat](https://www.amazon.co.uk/d/Books/Operation-Mincemeat-True-Story-Changed-Course-World/1408809214):&lt;/span&gt; The True Spy Story That Changed the Course of World War II. &lt;/span&gt;
Reading so much about the non-fiction side of this topic ultimately led me to the &lt;span style=&quot;color: #0000ff;&quot;&gt;[Ian Flemming novels](https://en.wikipedia.org/wiki/List_of_James_Bond_novels_and_short_stories).&lt;/span&gt; Of course I had seen all the movies as a kid, and like most, loved them. Reading the novels in their order of release ended up being much more fun than I have with most fictional book series perhaps because of Flemming&apos;s true involvements during WWII.

Gentle brushing against the topic of cryptography with these classical stories  eventually lead me to an interest in modern crypto. Real, crypto! Like most sciences portrayed in popular culture, it really only gets interesting when you get into the technical reading.
Computerphile has several good videos on cryptographic topics. This video describes SHA1 in a way that I find quite interesting. This is just about hashing methods but it is a lovely introduction to crypto.
[www.youtube.com](https://www.youtube.com/watch?v=DMtFhACPnTY)
Another video from the series now gets to actual crypto  in the same entertaining way; [End to End Encryption (E2EE)](
https://www.youtube.com/watch?v=jkV1KEJGKRA).

&lt;a name=&quot;breaking&quot;&gt;&lt;/a&gt;
# Breaking crypto
Learning the basics of crypto and how it&apos;s broken is best done at the same time. Of course actually breaking the crypto is difficult. But understanding it doesn&apos;t have to be. To learn this you can quickly get the main points about modular arithmetic, exponentiation, and periods in this video.
[Shor’s algorithm](
https://www.youtube.com/watch?v=12Q3Mrh03Gk)

I think getting a clear grasp on the topic relies on getting used to modular arithmetic. For example on a clock we use Mod 12\. If you get up at 12am and the time is now 1pm well then obviously you have been up for 13 hours. **13 mod 12 = 1**.
You know just as well that if you get up at 7am and it is now 8pm you have also been up for 13 hours. We can do this in our head very easily, and can do other examples easily too if you get over the initial confusion. **A/B = Q remainder R**. In some cases we only care about the remainder R. In that case we say: **A modulo B is equal to R**. Where B is referred to as the modulus (or mod for short).
The only difficulty is when the numbers become quite large.
&lt;span style=&quot;color: #0000ff;&quot;&gt;[Here is a page that describes this very well. ](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)&lt;/span&gt;

This video is summed up with the 4 steps. The reason that RSA works is because Step 2, finding the period, takes a very long time:

![rsa](https://dylanlawlessblog.files.wordpress.com/2017/02/rsa.png)

Quantum computing is expected to dramatically speed up this step.
Another good intro video that has some interesting discussion on Diffie-Hellman key exchange was given at the Chaos Communication Congress:
J. Alex Halderman, Nadia Heninger: Logjam: Diffie-Hellman, discrete logs, the NSA, and you.

“Earlier this year, we discovered that Diffie-Hellman key exchange – cornerstone of modern cryptography – is less secure in practice than the security community believed. In this talk, we’ll explain how the NSA is likely exploiting this weakness to allow it to decrypt connections to at least 20% of HTTPS websites, 25% of SSH servers, and 66% of IPsec VPNs.”
[www.youtube.com](https://www.youtube.com/watch?v=mS8gm-_rJgM)

Applied Cypto Handbook is a very good technical introduction and probably as far as a general reader will ever want to go.
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://cacr.uwaterloo.ca/hac/](http://cacr.uwaterloo.ca/hac/)&lt;/span&gt;

&lt;a name=&quot;aes&quot;&gt;&lt;/a&gt;
# AES is the most important current encryption method
This lecture is the perfect intro if you already know what methods are out there.
[www.youtube.com](https://www.youtube.com/watch?v=x1v2tX4_dkQ)
The accompanying book is worth the money if you&apos;re looking for a textbook. The table of contents is available on amazon.
&lt;span style=&quot;color: #0000ff;&quot;&gt; [http://www.crypto-textbook.com.](http://www.crypto-textbook.com)&lt;/span&gt;
Here is a link to &lt;span style=&quot;color: #0000ff;&quot;&gt;[Galois&apos; wiki.](https://en.wikipedia.org/wiki/Évariste_Galois#Galois_theory)&lt;/span&gt;
This might lead you down a wiki rabbit hole learning about interesting maths.

&lt;a name=&quot;quantum&quot;&gt;&lt;/a&gt;
# Quantum computing
Here are simply two videos from PBS that will be more entertaining and succinct at discussing this really interesting topic than I.
[How quantum computing works](https://www.youtube.com/watch?v=IrbJYsep45E)
How might quantum computing destroy computer security?
[By utilising Shor’s algorithm](https://www.youtube.com/watch?v=wUwZZaI5u0c)

A fun little topic brought up in this videos is: that quantum Fourier transform uses resonance to amplify the basic state associated with the correct period.
If you’re reading this site then it’s likely that you are a biologist.
If that is the case you may be more familiar with protein structures than quantum mechanics.
I first became introduced to the practical application of Fourier transformation while learning nuclear magnetic resonance (NMR) spectroscopy for protein structuring.
Of course, you don’t actually have to learn it to do NMR.
It happens automatically during data analysis but most people in the field surely would still like to know the details.
Wiki has a great page: [https://en.wikipedia.org/wiki/Fourier_transform](https://en.wikipedia.org/wiki/Fourier_transform)
![ft](https://dylanlawlessblog.files.wordpress.com/2017/02/ft.png)
“In NMR an exponentially shaped free induction decay (FID) signal is acquired in the time domain and Fourier-transformed to a Lorentzian line-shape in the frequency domain.”

The next main point addressed in this video is: Complex roots of unity.
This is introduced quite well in the video.
If you have never seen anything like this before then I highly recommend the short book by Feynman;
[QED: The Strange Theory of Light and Matter](https://www.amazon.co.uk/dp/B00BR40XJ6?ref_=k4w_oembed_ICZkE7ckZ2ZUfR&amp;tag=kpembed-20&amp;linkCode=kpd)
&lt;!--
(https://www.amazon.com/QED-Strange-Princeton-Science-Library/dp/0691164096/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1494067439&amp;sr=1-1&amp;keywords=qed+the+strange+theory+of+light+and+matter)
--&gt;
In no way does this little book talk about quantum computing.
If fact it is pretty old now and is not the kind of thing that professionals will be using for reference.
Why would I suggest this for someone who is new to the topic? Well it is an extremely fun introduction to the topic of QED and lays the foundation of ideas that have become mainstream over the next 30 years.
Understanding some basic ideas will leave you open to recognise more complex applications, especially important if you want to only look at the basics of quantum computing.

&lt;a name=&quot;thoughts&quot;&gt;&lt;/a&gt;
# Some thoughts
This talk at Google by Peter Warren Singer based on his book,
&lt;span style=&quot;color: #0000ff;&quot;&gt;[Cybersecurity and Cyberwar](https://www.amazon.com/Cybersecurity-Cyberwar-Everyone-Needs-Know%C2%AE/dp/0199918112)&lt;/span&gt;,
may be a pretty interesting watch for anyone into technology security in some way. This is not a technical talk, more of something to get you into the mindset up why this topic may be interesting.
[www.youtube.com](https://www.youtube.com/watch?v=h0SXO5KUZIo)
[&lt;span style=&quot;color: #0000ff;&quot;&gt;https://www.cl.cam.ac.uk/~rja14/book.html&lt;/span&gt;](https://www.cl.cam.ac.uk/~rja14/book.html) Security Engineering — The Book

The cryptopals crypto challenges are a fun way to learn some hands on application of cryptographic techniques. &lt;span style=&quot;color: #0000ff;&quot;&gt;[http://www.cryptopals.com/](http://www.cryptopals.com/)&lt;/span&gt;

Announcing the first SHA1 collision on February 23, 2017.
This was a really big event in the crypto community.
I think many people in the cyber security field assume that experiments and findings in public and academic research are a few years behind government capabilities.
Take from that what you will.
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html](https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html)&lt;/span&gt;

There are countless reasons why crypto is interesting.
The applications range from the most mundane day to day requirements in the modern world such as banking, personal communication, the use of medical data (which I post about here &lt;span style=&quot;color: #0000ff;&quot;&gt;[Pretty good privacy for academic data](https://dylanlawlessblog.wordpress.com/2017/02/21/pretty-good-privacy-for-academic-data/)&lt;/span&gt;) all the way out to the most hypothetical academic applications.
An interesting point to think about is the journey that each data packet makes across the mystical _internet_.
Most electronic communications travel across a number of boarders and further distances than most people will travel in their entire life.
Our world would not run very smoothly if all communication was sent in a readable format with no protection.
Here is some basic info on the infrastructure require for modern electronic communication:
[www.youtube.com](https://www.youtube.com/watch?v=DKHZKTRyzeg),
[www.youtube.com](https://www.youtube.com/watch?v=0TZwiUwZwIE)
And the &lt;span style=&quot;color: #0000ff;&quot;&gt;[Submarine Cable Map](http://www.submarinecablemap.com)&lt;/span&gt;.

While we&apos;re on the topic, I found this video on the Cornwall cable landing station.
The physical infrastructure and engineering requirements of global communication are sometimes easy to forget if one spends more time on computer programming or mathematics
[www.youtube.com](https://www.youtube.com/watch?v=K_nnUbX7uuQ).

&lt;a name=&quot;reading&quot;&gt;&lt;/a&gt;
# Reading list on more advanced topics
/r/crypto wiki  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://www.reddit.com/r/crypto/wiki/index](https://www.reddit.com/r/crypto/wiki/index)&lt;/span&gt;  
Textbook: An Introduction to Mathematical Cryptography  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=5F72903FBACA6DF57799612526CC437F?doi=10.1.1.182.9999&amp;rep=rep1&amp;type=pdf](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=5F72903FBACA6DF57799612526CC437F?doi=10.1.1.182.9999&amp;rep=rep1&amp;type=pdf)&lt;/span&gt;  
Cryptology ePrint Archive  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://eprint.iacr.org](http://eprint.iacr.org)&lt;/span&gt;  
Handbook of Applied Cryptography  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://cacr.uwaterloo.ca/hac/](http://cacr.uwaterloo.ca/hac/)&lt;/span&gt;
Goldreich: The Foundations of Cryptography  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://www.wisdom.weizmann.ac.il/%7Eoded/foc-drafts.html](http://www.wisdom.weizmann.ac.il/%7Eoded/foc-drafts.html)&lt;/span&gt;  
Handbook of Elliptic and Hyperelliptic Curve Cryptography  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://www.hyperelliptic.org/HEHCC/](http://www.hyperelliptic.org/HEHCC/)&lt;/span&gt;  
eBACS: ECRYPT Benchmarking of Cryptographic Systems  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://bench.cr.yp.to](http://bench.cr.yp.to)&lt;/span&gt;  
Mihir Bellare and Shafi Goldwasser&apos;s Lecture Notes  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://cseweb.ucsd.edu/%7Emihir/papers/gb.pdf](http://cseweb.ucsd.edu/%7Emihir/papers/gb.pdf)&lt;/span&gt;  
Charm: A tool for rapid cryptographic prototyping  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://www.charm-crypto.com/index.html](http://www.charm-crypto.com/index.html)&lt;/span&gt;  
eHash Wiki  
[Hash Function Zoo](http://ehash.iaik.tugraz.at/wiki/The_Hash_Function_Zoo)  
and the [SHA-3 Zoo](http://ehash.iaik.tugraz.at/wiki/The_SHA-3_Zoo)  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://ehash.iaik.tugraz.at/wiki/The_eHash_Main_Page](http://ehash.iaik.tugraz.at/wiki/The_eHash_Main_Page)&lt;/span&gt;  
Cryptology ePrint Archive  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://eprint.iacr.org](http://eprint.iacr.org)&lt;/span&gt;  
IACR Conferences (Crypto, Eurocrypt, Asiacrypt)  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://www.iacr.org/conferences/](http://www.iacr.org/conferences/)&lt;/span&gt;  
IEEE Symposium on Security and Privacy (There are loads of papers and talks on YouTube under Program of past events)  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://www.ieee-security.org/TC/SP2017/past.html](https://www.ieee-security.org/TC/SP2017/past.html)&lt;/span&gt;  
Crypto Stack Exchange  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://crypto.stackexchange.com](https://crypto.stackexchange.com)&lt;/span&gt;  
Blogpost so-you-want-to-crypto  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://www.seancassidy.me/so-you-want-to-crypto.html](https://www.seancassidy.me/so-you-want-to-crypto.html)&lt;/span&gt;  
Authenticated Encryption Zoo  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://aezoo.compute.dtu.dk/doku.php?id=AE%20Zoo](https://aezoo.compute.dtu.dk/doku.php?id=AE%20Zoo)&lt;/span&gt;  
Helger Lipmaa Cryptology Pointers  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://kodu.ut.ee/~lipmaa/crypto/](http://kodu.ut.ee/~lipmaa/crypto/)&lt;/span&gt;  
Free Course: Applied Cryptography  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://www.udacity.com/course/applied-cryptography--cs387](https://www.udacity.com/course/applied-cryptography--cs387)&lt;/span&gt;  
Kerckhoffs&apos;s principle  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle](https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle)&lt;/span&gt;  
Schneier&apos;s Law  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://www.schneier.com/blog/archives/2011/04/schneiers_law.html](https://www.schneier.com/blog/archives/2011/04/schneiers_law.html)&lt;/span&gt;  
crypto blogs from David Wong&apos;s github  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[https://github.com/mimoo/crypto_blogs](https://github.com/mimoo/crypto_blogs)&lt;/span&gt;  
Shor in Haskell The Quantum IO Monad  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://www.cs.nott.ac.uk/%7Epsztxa/publ/qio.pdf](http://www.cs.nott.ac.uk/%7Epsztxa/publ/qio.pdf)&lt;/span&gt;  
The Quipper Language: programming language for quantum computing  
&lt;span style=&quot;color: #0000ff;&quot;&gt;[http://www.mathstat.dal.ca/%7Eselinger/quipper/](http://www.mathstat.dal.ca/%7Eselinger/quipper/)&lt;/span&gt;  

&lt;!-- 
![encrpytdata](https://i.imgur.com/UubXs0H.gif)
--&gt;</content><author><name></name></author><category term="statistics" /><summary type="html">Cryptography</summary></entry><entry><title type="html">The devil is in the detail</title><link href="/2019/08/19/devil_in_detail.html" rel="alternate" type="text/html" title="The devil is in the detail" /><published>2019-08-19T00:00:00+02:00</published><updated>2019-08-19T00:00:00+02:00</updated><id>/2019/08/19/devil_in_detail</id><content type="html" xml:base="/2019/08/19/devil_in_detail.html">{{ page.title }}
================

&lt;p class=&quot;meta&quot;&gt;19 Aug 2019&lt;/p&gt;
I was learning some [steganography](https://en.wikipedia.org/wiki/Steganography) methods for a security project. 
At the same time, I was writing up a paper with some friends 
([https://link.springer.com/content/pdf/11.1007%2Fs10875-019-00670-z.pdf](https://link.springer.com/content/pdf/11.1007%2Fs10875-019-00670-z.pdf)) 
and decided to hide a little message in one of the figures.
The goal was to encode some hidden data and see could we get it back out 
the other side, after publication. 

It would be a lot of trouble for a master of espionage to have to publish a 
paper every time a secret message needed to be encoded for public transmission, 
but maybe it could be done! 

&lt;img src=&quot;{{ site.baseurl }}{% link images/posts/editor_paper_rag.png %}&quot; width=&quot;101%&quot;&gt;

The secret message was imported into [R](https://www.r-project.org) from plain text. 
It was encoded into a png file that was to be a supplemental figure in our paper 
From experience, supplemental figures usually get uploaded to a repository and
stored in the same format for later downloaded after publication, 
until main-text figures which are often converted in one way or another by the publisher. 
Once the figure was released, anyone with the correct decoding algorithm 
could get back the secret message. 

In this case, I used the 
[richfitz/stegasaur](https://github.com/richfitz/stegasaur) package, 
innocently offered with &quot;The aim is to be able to encode arbitrary R objects in cat pictures.&quot; 
The inforation was hidden within the data that makes up the image, 
and is imperceivable to the naked eye. 
Even better, the file size was slightly _SMALLER_ than the original 
(1.9MB to 1.7MB) without a noticeable difference in quality. 
After peer review of the paper, publisher proceessing and publication, 
the secret message was successfully decoded from the protein structure figure 
&quot;F_E4_Structure.png&quot; and was printed to the console: 

&lt;img src=&quot;{{ site.baseurl }}{% link images/posts/r_steg_decode.png %}&quot; width=&quot;100%&quot;&gt;

This exercise looks like a bit of fun, 
but was done to demonstrate the unavoidable 
risks that exist in sensitive data research.[^foot]
Today, protected data enclaves are used for processing sensitive data 
and usually allow summary results or figures to be exported.
These are therefore basically a trust based system and are otherwise only security theatre.

Here&apos;s an idea, [steganographic message blocks](https://patents.google.com/patent/US8527779) 
seperated across a career worth of publications, 
that can only be deciphered once all blocks are collected! 
Who would go to that trouble? 
Go see what you can find in one Supplementary material png file. 
[https://link.springer.com/article/10.1007%2Fs10875-019-00670-z](https://link.springer.com/article/10.1007%2Fs10875-019-00670-z)

# R script 
Try it yourself.
Find the paper and get Figure E4.
Download
[10875_2019_670_MOESM5_ESM](https://link.springer.com/article/10.1007%2Fs10875-019-00670-z#SupplementaryMaterial)
```
&gt; install.packages(&quot;devtools&quot;)
&gt; install_github(&quot;richfitz/stegasaur&quot;)
&gt; library(&quot;devtools&quot;)
&gt; library(ggplot2) 
&gt; Decode message &lt;- 
&gt;		stegasaur::decode(&quot;~/10875_2019_670_MOESM5_ESM.png&quot;)
```
# Footnote
[^foot]: [Medical espionage]({{ site.baseurl }}{% link _topic/cryptography/medical_espionage.md %}).</content><author><name></name></author><category term="statistics" /><summary type="html">The devil is in the detail</summary></entry></feed>